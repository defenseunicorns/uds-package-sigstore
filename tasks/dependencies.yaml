# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

tasks:
  - name: create
    description: Create the dependency openbao package
    inputs:
      options:
        description: For setting create time variables and flags
      architecture:
        description: The architecture of the package to create
        default: ${UDS_ARCH}
    actions:
      - cmd: ./uds zarf package create src/dev-openbao/ --confirm --no-progress --architecture=${{ .inputs.architecture }} --skip-sbom ${{ .inputs.options }}

  - name: certs
    description: Create the certificates needed to initialize Fulcio / TSA
    actions:
      - description: Create the CA Root
        cmd: |
          openssl ecparam -out ca.key.pem -name prime256v1 -genkey
          openssl req -x509 -new -nodes -key ca.key.pem -sha256 -days 1825 -out ca.crt.pem -config ca.cnf
        dir: src/certs
      - description: Create the Fulcio Intermediate CA
        cmd: |
          openssl ecparam -out fulcio.key.pem -name prime256v1 -genkey
          openssl req -new -key fulcio.key.pem -sha256 -out fulcio.csr -config fulcio.cnf
          openssl x509 -req -in fulcio.csr -CA ca.crt.pem -CAkey ca.key.pem -CAcreateserial -out fulcio.crt.pem -days 365 -extensions v3_req -extfile fulcio.cnf
          cat fulcio.crt.pem > fulcio.chain.pem && cat ca.crt.pem >> fulcio.chain.pem
          openssl pkcs8 -topk8 -inform PEM -outform DER -in fulcio.key.pem -out fulcio.key.der -nocrypt
        dir: src/certs
      - description: Create the TSA Key/Cert
        cmd: |
          openssl ecparam -out tsa.key.pem -name prime256v1 -genkey
          openssl req -new -key tsa.key.pem -sha256 -out tsa.csr -config tsa.cnf
          openssl x509 -req -in tsa.csr -CA ca.crt.pem -CAkey ca.key.pem -CAcreateserial -out tsa.crt.pem -days 365 -extensions v3_req -extfile tsa.cnf
          cat tsa.crt.pem > tsa.chain.pem && cat ca.crt.pem >> tsa.chain.pem
          openssl pkcs8 -topk8 -inform PEM -outform DER -in tsa.key.pem -out tsa.key.der -nocrypt
        dir: src/certs
      - description: Create the Rekor Key
        cmd: |
          openssl ecparam -out rekor.key.pem -name prime256v1 -genkey
          openssl pkcs8 -topk8 -inform PEM -outform DER -in rekor.key.pem -out rekor.key.der -nocrypt
          openssl ec -in rekor.key.pem -pubout > rekor.pub.pem
        dir: src/certs
      - description: Create the CTLog Key
        cmd: |
          openssl ecparam -out ctlog.key.pem -name prime256v1 -genkey
          openssl ec -in ctlog.key.pem -out ctlog.key.enc.pem -aes256 -passout pass:not_for_production_use
          openssl ec -in ctlog.key.pem -pubout > ctlog.pub.pem
        dir: src/certs
